"use strict";(self.webpackChunk_semaphore_protocol_website=self.webpackChunk_semaphore_protocol_website||[]).push([[613],{3905:function(e,t,r){r.d(t,{Zo:function(){return l},kt:function(){return u}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),h=p(r),u=o,d=h["".concat(s,".").concat(u)]||h[u]||m[u]||a;return r?n.createElement(d,i(i({ref:t},l),{},{components:r})):n.createElement(d,i({ref:t},l))}));function u(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=h;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var p=2;p<a;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}h.displayName="MDXCreateElement"},7589:function(e,t,r){r.r(t),r.d(t,{contentTitle:function(){return s},default:function(){return h},frontMatter:function(){return c},metadata:function(){return p},toc:function(){return l}});var n=r(3117),o=r(102),a=(r(7294),r(3905)),i=["components"],c={sidebar_position:3},s="Contracts",p={unversionedId:"technical-reference/contracts",id:"version-V2/technical-reference/contracts",title:"Contracts",description:"Semaphore includes three types of contracts:",source:"@site/versioned_docs/version-V2/technical-reference/contracts.md",sourceDirName:"technical-reference",slug:"/technical-reference/contracts",permalink:"/docs/technical-reference/contracts",editUrl:"https://github.com/semaphore-protocol/website/edit/main/versioned_docs/version-V2/technical-reference/contracts.md",tags:[],version:"V2",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"version-V2/mySidebar",previous:{title:"Circuits",permalink:"/docs/technical-reference/circuits"},next:{title:"Deployed contracts",permalink:"/docs/deployed-contracts"}},l=[{value:"Base contracts",id:"base-contracts",children:[],level:2},{value:"Extension contracts",id:"extension-contracts",children:[],level:2},{value:"Verifiers",id:"verifiers",children:[],level:2}],m={toc:l};function h(e){var t=e.components,r=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"contracts"},"Contracts"),(0,a.kt)("p",null,"Semaphore includes three types of contracts:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/technical-reference/contracts#base-contracts"},(0,a.kt)("strong",{parentName:"a"},"Base contracts"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/technical-reference/contracts#extension-contracts"},(0,a.kt)("strong",{parentName:"a"},"Extension contracts"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/technical-reference/contracts#verifiers"},(0,a.kt)("strong",{parentName:"a"},"Verifiers")))),(0,a.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"To use Semaphore contracts and interfaces in your project,\ninstall the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/semaphore-protocol/semaphore/tree/v2.6.1/packages/contracts"},(0,a.kt)("inlineCode",{parentName:"a"},"@semaphore-protocol/contracts"))," NPM package."))),(0,a.kt)("h2",{id:"base-contracts"},"Base contracts"),(0,a.kt)("p",null,"Semaphore provides the following base contracts:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/semaphore-protocol/semaphore/tree/v2.6.1/packages/contracts/base/SemaphoreCore.sol"},(0,a.kt)("inlineCode",{parentName:"a"},"SemaphoreCore.sol")),": contains the functions to verify Semaphore proofs;"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/semaphore-protocol/semaphore/tree/v2.6.1/packages/contracts/base/SemaphoreGroups.sol"},(0,a.kt)("inlineCode",{parentName:"a"},"SemaphoreGroups.sol")),": contains the functions to create groups and add/remove members.")),(0,a.kt)("p",null,"These contracts are closely related to the protocol.\nYou can inherit them in your contract or you can use ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/semaphore-protocol/semaphore/tree/v2.6.1/packages/contracts/Semaphore.sol"},(0,a.kt)("inlineCode",{parentName:"a"},"Semaphore.sol")),", which inherits them for you.\nSee our ",(0,a.kt)("a",{parentName:"p",href:"/docs/deployed-contracts#semaphore"},"deployed contracts")," to find the addresses for your network."),(0,a.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"While some dApps may use on-chain groups, others may prefer to use off-chain groups, saving only their tree roots in the contract."))),(0,a.kt)("h2",{id:"extension-contracts"},"Extension contracts"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/semaphore-protocol/semaphore/tree/v2.6.1/packages/contracts/extensions/SemaphoreVoting.sol"},(0,a.kt)("inlineCode",{parentName:"a"},"SemaphoreVoting.sol")),": voting contract that contains the essential functions to create polls, add voters, and anonymously cast votes."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/semaphore-protocol/semaphore/tree/v2.6.1/packages/contracts/extensions/SemaphoreWhistleblowing.sol"},(0,a.kt)("inlineCode",{parentName:"a"},"SemaphoreWhistleblowing.sol")),": whistleblowing contract that contains the essential functions to create entities (for example: non-profit organizations), add whistleblowers, and anonymously publish leaks.")),(0,a.kt)("p",null,"These contracts extend the protocol to provide application logic for specific use-cases.\nMore extensions will be added in the future."),(0,a.kt)("h2",{id:"verifiers"},"Verifiers"),(0,a.kt)("p",null,"To verify Semaphore proofs, the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/semaphore-protocol/semaphore/tree/v2.6.1/packages/contracts/base/SemaphoreCore.sol"},(0,a.kt)("inlineCode",{parentName:"a"},"SemaphoreCore.sol"))," contract requires the address of a deployed verifier contract.\nYou can choose to manually deploy the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/semaphore-protocol/semaphore/tree/v2.6.1/packages/contracts/verifiers"},"verifier")," you prefer or you can use one of our ",(0,a.kt)("a",{parentName:"p",href:"/docs/deployed-contracts#verifiers"},"deployed verifiers"),"."),(0,a.kt)("p",null,"Each verifier name indicates the tree depth that it can verify.\nFor example, given a Semaphore proof generated with a tree depth ",(0,a.kt)("inlineCode",{parentName:"p"},"20"),":"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"The ",(0,a.kt)("inlineCode",{parentName:"li"},"Verifier20.sol")," contract can verify the proof."),(0,a.kt)("li",{parentName:"ul"},"The ",(0,a.kt)("a",{parentName:"li",href:"/docs/guides/groups"},"group")," used for the proof can have a maximum ",(0,a.kt)("inlineCode",{parentName:"li"},"2^20=1048576")," members.")))}h.isMDXComponent=!0}}]);